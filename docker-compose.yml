name: WildDex

services:
  db-primary:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - "./server/.env"
    volumes:
      - pgdata-primary:/var/lib/postgresql/data
    networks:
      - wilddex-network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: wilddex
      POSTGRES_DB: wilddex-primary-db

  db-replica:
    image: postgres
    restart: always
    ports:
      - "5433:5432"
    env_file:
      - "./server/.env"
    volumes:
      - pgdata-replica:/var/lib/postgresql/data
    networks:
      - wilddex-network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: wilddex
      POSTGRES_DB: wilddex-replica-db

  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: wilddex-api
    ports:
      - "4000:4000"
    env_file:
      - "./server/.env"
    networks:
      - wilddex-network
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - db-primary

  prediction-api:
    build:
      context: ./model
      dockerfile: Dockerfile
    image: wilddex-prediction-api
    ports:
      - "8080:8080"
    networks:
      - wilddex-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    image: wilddex-client
    restart: always
    ports:
      - "5173:5173"
    env_file:
      - "./client/.env"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - wilddex-network

volumes:
  pgdata-primary:
  pgdata-replica:

networks:
  wilddex-network:
    driver: bridge
