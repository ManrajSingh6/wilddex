name: WildDex

services:
  db-primary:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - "./server/.env"
    volumes:
      - pgdata-primary:/var/lib/postgresql/data
    networks:
      - wilddex-network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: wilddex
      POSTGRES_DB: wilddex-primary-db

  db-replica:
    image: postgres
    restart: always
    ports:
      - "5433:5432"
    env_file:
      - "./server/.env"
    volumes:
      - pgdata-replica:/var/lib/postgresql/data
    networks:
      - wilddex-network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: wilddex
      POSTGRES_DB: wilddex-replica-db

  api-1:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: wilddex-api
    ports:
      - "4000:4000"
    env_file:
      - "./server/.env"
    networks:
      - wilddex-network
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - db-primary
    environment:
      - PORT=4000
    
  api-2:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: wilddex-api
    ports:
      - "4001:4001"
    env_file:
      - "./server/.env"
    networks:
      - wilddex-network
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - db-primary
    environment:
      - PORT=4001

  api-3:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: wilddex-api
    ports:
      - "4002:4002"
    env_file:
      - "./server/.env"
    networks:
      - wilddex-network
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - db-primary
    environment:
      - PORT=4002

  prediction-api:
    build:
      context: ./model
      dockerfile: Dockerfile
    image: wilddex-prediction-api
    ports:
      - "8080:8080"
    networks:
      - wilddex-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    image: wilddex-client
    restart: always
    ports:
      # - "5173:5173"
      - "80:80"
    env_file:
      - "./client/.env"
    volumes:
      - ./client:/app
      - /app/node_modules
    # depends_on:
    #   - nginx
    networks:
      - wilddex-network

  # nginx:
  #   image: nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./client/nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - api-1
  #     - api-2
  #     - api-3
  #   networks:
  #     - wilddex-network

volumes:
  pgdata-primary:
  pgdata-replica:

networks:
  wilddex-network:
    driver: bridge
